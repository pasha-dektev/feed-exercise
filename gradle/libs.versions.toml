[versions]

kotlinVersion = "1.6.21"
coroutinesVersion = "1.6.2"
kotlinxSerializationVersion = "1.3.2"
accompanist_version = "0.24.10-beta"
lifecycleVersion = "2.4.1"
androidAppCompatVersion = "1.4.2"
androidXCoreVersion = "1.8.0"
retrofitVersion = "2.9.0"
retrofitSerializationConverterVersion = "0.8.0"
okhttp3Version = "4.9.3"
coilVersion = "2.1.0"
roomVersion = "2.4.2"
composeVersion = "1.2.0-beta03"
daggerVersion = "2.42"

# tests
espressoCoreVersion = "3.2.0"
testRunnerVersion = "1.2.0"
testCoreVersion = "1.4.0"
robolectricVersion = "4.6.1"
mockitoVersion = "4.3.1"

[libraries]
# kotlin
kotlinTestJUnit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion" }
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationVersion" }

androidXCore = { module = "androidx.core:core-ktx", version.ref = "androidXCoreVersion" }
appCompat = { module = "androidx.appcompat:appcompat", version.ref = "androidAppCompatVersion" }
lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" }
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleVersion" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
retrofit-serializationConverter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofitSerializationConverterVersion" }
okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp3Version" }
okHttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3Version" }
room = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
coil = { module = "io.coil-kt:coil", version.ref = "coilVersion" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilVersion" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "composeVersion" }
compose-ui-toolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeVersion" }
compose-material = { module = "androidx.compose.material:material", version.ref = "composeVersion" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeVersion" }
dagger = { module = "com.google.dagger:dagger", version.ref = "daggerVersion" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "daggerVersion" }

# tests
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCoreVersion" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectricVersion" }
testCore = { module = "androidx.test:core", version.ref = "testCoreVersion" }
testRunner = { module = "androidx.test:runner", version.ref = "testRunnerVersion" }
testRules = { module = "androidx.test:rules", version.ref = "testRunnerVersion" }
testExtTruth = { module = "androidx.test.ext:truth", version = "1.1.3" }
testExtJunit = { module = "androidx.test.ext:junit", version = "1.4.0" }
junit = { module = "junit:junit", version = "4.13.2" }
mockito = { module = "org.mockito:mockito-core", version.ref = "mockitoVersion" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockitoVersion" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version = "4.0.0" }
room-testing = { module = "androidx.room:room-testing", version.ref = "roomVersion" }

# gradle plugins artifacts
kotlinGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
kotlinSerializationGradle = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlinVersion" }

[bundles]
core = ["androidXCore", "appCompat"]
room = ["room", "room-runtime"]
network = ["retrofit", "retrofit-serializationConverter", "okHttp", "okHttp-loggingInterceptor"]
mockito = ["mockito", "mockito-inline", "mockito-kotlin"]
androidXTest = ["testCore", "testExtJunit", "testExtTruth"]
